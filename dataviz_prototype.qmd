---
title: "Dataviz Prototype"
format: html
editor: visual
---

## 

```{r}
df <- coronavirus::refresh_coronavirus_jhu()
head(df)
```

```{r}
`%>%` <- magrittr::`%>%`

source("./functions/dashboard_functions.R")
load("./data/gis_mapping.RData")
coronavirus_jhu = coronavirus::refresh_coronavirus_jhu()
gis_codes = get_gis_codes()
corona_agg <- coronavirus_agg(coronavirus_jhu = coronavirus_jhu,
                gis_codes = gis_codes)
df_cases2 <- coronavirus_jhu %>%
  dplyr::filter(location_type == "country",
                !is.na(location_code),
                data_type != "recovered_new") %>%
  dplyr::left_join(gis_codes %>% 
                     dplyr::select(-lat, - long) %>%
                     dplyr::filter(combined_key == country_region, 
                                               is.na(province_state)), by = c("location" = "combined_key")) %>%
  dplyr::left_join(continent_mapping %>% dplyr::select(continent_name, continent_code, iso2), by = "iso2")
  
head(df_cases2)
table(is.na(df_cases2$continent_name))
df_cases_c <- df_cases2 %>% 
  dplyr::filter(data_type == "cases_new",
                !is.na(continent_name)) %>%
  dplyr::group_by(date, continent_name) %>%
  dplyr::summarise(total = sum(value), .groups = "drop")

# Smoothing outliers
head(df_cases_c)
table(is.na(df_cases_c$total))
table(is.na(df_cases_c$continent_name))


df_cases_c$total[which(df_cases_c$date == as.Date("2021-05-20") & 
                         df_cases_c$continent_name == "Europe")] <- (df_cases_c$total[which(df_cases_c$date == as.Date("2021-05-19") & 
                                                                                              df_cases_c$continent_name == "Europe")] + 
                                                                       df_cases_c$total[which(df_cases_c$date == as.Date("2021-05-21") & 
                                                                                                df_cases_c$continent_name == "Europe")]) / 2

```
